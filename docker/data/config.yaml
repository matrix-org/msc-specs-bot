# Settings to connect to the bot's Matrix account.
matrix:
  # URL of the Matrix homeserver the bot's account is registered on.
  hs_url: "https://matrix.example.com"
  # Matrix ID of the bot's account.
  mxid: "@specs-bot:example.com"
  # Valid access token for the bot's account.
  access_token: "ACCESS_TOKEN"

# Settings for setting up the GitHub webhook.
webhook:
  # HTTP path to setup the webhook on.
  path: "/webhook-path"
  # Webhook's secret.
  secret: "SECRET"
  # Address the HTTP server listens on. Must be formatted like either
  # "0.0.0.0:8080" or ":8080".
  # The Docker image only exposes the port 8080, so changing it would
  # render the bot inaccessible from your host.
  listen_addr: "127.0.0.1:8080"

# Settings for formatting and sending notices to the Matrix rooms.
notices:
  # JSON file containing the strings to use according to SCS's state. An
  # example is available in the "strings.json" file.
  strings_file: "/etc/specs-bot/strings.json"
  # Go pattern to use while formatting the notice message.
  # Available placeholders:
  #   * {{ .Number }}     The SCS's issue/pull request number.
  #   * {{ .Title }}      The SCS's title.
  #   * {{ .Message }}    The message found in the JSON strings file for the
  #                       SCS's state.
  #   * {{ .URL }}        The SCS's issue/pull request URL.
  # More information on Go patterns can be found at https://godoc.org/text/template
  pattern: "SCS #{{ .Number }} \"{{ .Title }}\" {{ .Message }}: {{ .URL }}"
  # IDs of the Matrix rooms to send notices to.
  rooms: ["!someid:example.com"]

# Settings for connecting to the database.
database:
  # Database driver. Can be either "postgres" or "sqlite3".
  driver: sqlite3
  # Data source, which is the connection string for postgres or the database's
  # location for sqlite3.
  # Examples for postgres (look for "connStr"): https://godoc.org/github.com/lib/pq
  data_source: ./specs-bot.db
